---
apiVersion: v1
kind: ConfigMap
metadata:
  name: argocd-notifications-cm
data:
  service.webhook.github: |
    url: "https://api.github.com"
    headers:
      - name: Accept
        value: "application/vnd.github+json"
      - name: Authorization
        value: "Bearer $github-token"
      - name: X-GitHub-Api-Version
        value: 2022-11-28

  template.github-deployment-status: |
    webhook:
      github:
        method: POST
        path: "/repos/{{ index .app.metadata.annotations \"github.com/owner\" }}/{{ index .app.metadata.annotations \"github.com/repo\" }}/dispatches"
        body: |
          {
            "event_type": "sync-deployment-status",
            "client_payload": {
              {{- if .app.metadata.deletionTimestamp -}}
              "state": "inactive",
              {{- else if eq .app.status.operationState.phase "Running" -}}
              "state": "in_progress",
              {{- else if eq .app.status.operationState.phase "Succeeded" -}}
              "state": "success",
              {{- else if eq .app.status.operationState.phase "Error" -}}
              "state": "error",
              {{- else -}}
              "state": "failure",
              {{- end -}}

              {{- if eq (index .app.metadata.annotations "github.com/environment") "preview" -}}
              "environment_url": "http://{{ index .app.metadata.annotations "github.com/branch-slug" }}.acme-node.localhost/api/v1/hello",
              {{- else if eq (index .app.metadata.annotations "github.com/environment") "sandbox" -}}
              "environment_url": "https://sandbox.acme.com",
              {{- else if eq (index .app.metadata.annotations "github.com/environment") "local" -}}
              "environment_url": "http://sandbox.acme-node.localhost/api/v1/hello",
              {{- else -}}
              "environment_url": "https://acme.com",
              {{- end -}}

              {{- if index .app.metadata.annotations "github.com/ref" -}}
              "ref": "{{ index .app.metadata.annotations "github.com/ref" }}",
              {{- else -}}
              {{- range .app.status.summary.images -}}
                {{- if (contains (index $.app.metadata.annotations "github.com/repo") .) -}}
                  "ref": "{{ index (splitList ":" .) 1 }}",
                {{- end -}}
              {{- end -}}

              "environment": "{{ index .app.metadata.annotations "github.com/environment" }}",
              "log_url": "{{ .context.argocdUrl }}/applications/{{ .app.metadata.name }}"
            }
          }

  trigger.sync-operation-change: |
    - description: Application is synced and healthy. Triggered once per commit.
      when: app.status.operationState != nil and app.status.operationState.phase in ['Succeeded'] and app.status.health != nil and app.status.health.status == 'Healthy' and len(app.status.summary.images) > 0
      send:
        - github-deployment-status
    - description: Application is being synced
      when: app.status.operationState != nil and app.status.operationState.phase in ['Running'] and len(app.status.summary.images) > 0
      send:
        - github-deployment-status
    - description: Application syncing has failed
      when: app.status.operationState != nil and app.status.operationState.phase in ['Error', 'Failed'] and len(app.status.summary.images) > 0
      send:
        - github-deployment-status
  trigger.on-created: |
    - description: Application is created.
      oncePer: app.metadata.name
      send: []
      when: "true"
  trigger.on-deleted: |
    - description: Application is deleted.
      oncePer: app.metadata.name
      send:
        - github-deployment-status
      when: app.metadata.deletionTimestamp != nil
